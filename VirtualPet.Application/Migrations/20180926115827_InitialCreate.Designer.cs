// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtualPet.Application;

namespace VirtualPet.Application.Migrations
{
    [DbContext(typeof(VirtualPetDbContext))]
    [Migration("20180926115827_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VirtualPet.Application.Entities.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("EventTypes");

                    b.HasData(
                        new { Id = 1, CreateDate = new DateTime(2018, 9, 26, 12, 48, 26, 442, DateTimeKind.Local), Description = "The pet was born", Name = "Born" },
                        new { Id = 2, CreateDate = new DateTime(2018, 9, 26, 12, 48, 26, 442, DateTimeKind.Local), Description = "The pet was stroked", Name = "Stroked" },
                        new { Id = 3, CreateDate = new DateTime(2018, 9, 26, 12, 48, 26, 442, DateTimeKind.Local), Description = "The pet was fed", Name = "Fed" }
                    );
                });

            modelBuilder.Entity("VirtualPet.Application.Entities.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("Hunger")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(50);

                    b.Property<DateTime>("LastUpdated");

                    b.Property<int>("Mood")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(50);

                    b.Property<string>("Name");

                    b.Property<int>("PetProfileId");

                    b.Property<int>("PetTypeId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PetProfileId");

                    b.HasIndex("PetTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Pets");

                    b.HasData(
                        new { Id = 1, CreateDate = new DateTime(2018, 9, 26, 12, 48, 26, 442, DateTimeKind.Local), Hunger = 50, LastUpdated = new DateTime(2018, 9, 26, 12, 48, 26, 442, DateTimeKind.Local), Mood = 50, Name = "Fido", PetProfileId = 1, PetTypeId = 1, UserId = 1 }
                    );
                });

            modelBuilder.Entity("VirtualPet.Application.Entities.PetProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("FeedModifier");

                    b.Property<int>("HungerTimeModifier");

                    b.Property<int>("MoodTimeModifier");

                    b.Property<int>("StrokeModifier");

                    b.HasKey("Id");

                    b.ToTable("Profiles");

                    b.HasData(
                        new { Id = 1, CreateDate = new DateTime(2018, 9, 26, 12, 48, 26, 442, DateTimeKind.Local), FeedModifier = 10, HungerTimeModifier = 1, MoodTimeModifier = 1, StrokeModifier = 10 }
                    );
                });

            modelBuilder.Entity("VirtualPet.Application.Entities.PetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PetTypes");

                    b.HasData(
                        new { Id = 1, CreateDate = new DateTime(2018, 9, 26, 12, 48, 26, 442, DateTimeKind.Local), Name = "Dog" },
                        new { Id = 2, CreateDate = new DateTime(2018, 9, 26, 12, 48, 26, 442, DateTimeKind.Local), Name = "Cat" }
                    );
                });

            modelBuilder.Entity("VirtualPet.Application.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, CreateDate = new DateTime(2018, 9, 26, 12, 48, 26, 442, DateTimeKind.Local) }
                    );
                });

            modelBuilder.Entity("VirtualPet.Application.ValueObjects.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<int>("EventTypeId");

                    b.Property<int>("PetId");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("Events");

                    b.HasData(
                        new { Id = 1, CreateDate = new DateTime(2018, 9, 26, 12, 48, 26, 442, DateTimeKind.Local), EventTypeId = 1, PetId = 1 }
                    );
                });

            modelBuilder.Entity("VirtualPet.Application.Entities.Pet", b =>
                {
                    b.HasOne("VirtualPet.Application.Entities.PetProfile", "Profile")
                        .WithMany()
                        .HasForeignKey("PetProfileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VirtualPet.Application.Entities.PetType", "TypeOfPet")
                        .WithMany()
                        .HasForeignKey("PetTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VirtualPet.Application.Entities.User")
                        .WithMany("Pets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VirtualPet.Application.ValueObjects.Event", b =>
                {
                    b.HasOne("VirtualPet.Application.Entities.Pet")
                        .WithMany("Events")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
